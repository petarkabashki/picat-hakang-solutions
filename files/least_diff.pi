/*

  Least diff problem in Picat.

  The model solves the following problem:
  
  What is the smallest difference between two numbers X - Y
  if you must use all the digits (0..9) exactly once, i.e.
  Minimize the difference 
    ABCDE - FGHIJ

  Model created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import cp.

main => go.

scalar_product(A, X) = Product => 
   Product #= sum([S : I in 1..A.length, S #= A[I]*X[I]]).

make_base(N, Base) = List =>
   List = [T : I in 1..N, T = Base**(N-I)].

least_diff(L,Diff) =>
  L = [A,B,C,D,E,  F,G,H,I,J],
  L :: 0..9,

  all_different(L),

  X #= 10000*A + 1000*B + 100*C + 10*D + E,
  Y #= 10000*F + 1000*G + 100*H + 10*I + J,

  Diff #= X - Y,
  Diff #> 0,
  solve([$min(Diff)], L).


% Alternative version using scalar_product
least_diff2(L,Diff) =>
  L = [A,B,C,D,E,  F,G,H,I,J],
  L :: 0..9,
  all_different(L),
  M = L.length // 2,

  % Base = make_base(M, 10),
  Base = [T : I2 in 1..M, T = 10**(M-I2)],
  X = scalar_product(Base, [A,B,C,D,E]),
  Y = scalar_product(Base, [F,G,H,I,J]),

  Diff #= X - Y,
  Diff #> 0,
  solve([$min(Diff)], L).

 
go =>
   least_diff(L, Diff),
   writeln(L),
   writeln(Diff),
   least_diff2(L2, Diff2),
   writeln(L2),
   writeln(Diff2).
