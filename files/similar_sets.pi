/* 

  Similar sets in Picat.

  From
  "Finding simmilar sets with clojure's core.logic / minikanren"
  http://stackoverflow.com/questions/30558297/finding-simmilar-sets-with-clojures-core-logic-minikanren
  """
  I’m new to logic programming and are trying to evaluate if it can be used to solve 
  some matching problems I’m working on.

  Problem:

  Lets say we have a set A that looks like this.

  A = {1, 2, 3, 4}

  And then we have some other sets that looks like this.

  B = {1, 2}
  C = {3, 5, “banana"} 
  D = {2, 3, 4}

  The problem I’m trying to solve is,

  "Find me the set that share the most members with set A, compared to the 
  other sets we know about."

  The answer in this case should be set D, because it shares three members 
  with set A. Compared to the other sets that only share two and one member with A.
  """

  This Picat model was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/


import ordset.


main => go.


go =>
  A = [1, 2, 3, 4].new_ordset(),

  B = [1, 2].new_ordset(),
  C = [3, 5, banana].new_ordset(),
  D = [2, 3, 4].new_ordset(),

  Other = [B,C,D],

  Count = [],  
  foreach(S in Other)
    Count := Count ++ [intersection(A,S).len=S]
  end,
  
  println(count=Count.sort_down()),
  
  nl.


