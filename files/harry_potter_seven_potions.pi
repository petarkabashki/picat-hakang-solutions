/* 

  Harry Potter's potion problem in Picat.

  http://cse.csusb.edu/dick/cs320/prolog/Potions.htm
  """
  In the first "Harry Potter" book, Harry and Hermione are trapped in a room 
  with a table that has 7 different bottles on it. They have to find the 
  bottle to let them move forward through the room and the bottle that 
  lets them go back.
  
  On the table is a roll of parchment that reads:

      Danger lies before you, while safety lies behind,
      Two of us will help you, whichever you would find.
      One among us seven will let you move ahead,
      Another will transport the drinker back instead.
      Two among our number hold only nettle wine,
      Three of us are killers, waiting hidden in line.
      Choose, unless you wish to stay here forevermore,
      To help you in your choice, we give you these clues four:

      First, however slyly the poison tries to hide
      You will always find some on nettle wine's left side;

      Second, different are those who stand at either end,
      But if you would move forward, nether is your friend;

      Third, as you see clearly, all are different size,
      Neither dwarf nor giant holds death in their insides;

      Fourth, the second left and second on the right
      Are twins once you taste them, though different at first sight.

  Hermione remarks: "This isn't magic -- it's logic." and soon works out which 
  is the one that takes a person foraward and which will take a person back. Can you?
  """
  
  This model is based on the corresponding Prolog version:
  http://cse.csusb.edu/dick/cs320/prolog/potion1.plg


  This Picat model was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import cp.

main => go.


go =>
  
  N = 7,

  Wine = 1,
  Poison  = 2,
  Forward = 3,
  Back    = 4,

  S = [Wine,Poison,Forward,Back],
  SS = [wine, poison, forward, back],

  % decision variables
  Dwarf :: S,
  Giant :: S,
  X = [P1,P2,P3,_P4,_P5,P6,P7],
  X :: S,

  % constraints
  % one forward, one backward, 2 wines, and 3 poisons in some order
  global_cardinality(X,$[Forward-1,Back-1,Wine-2,Poison-3]),

  % Look at the drawing for the biggest and smallest
  Dwarf #= P3,
  Giant #= P2,

  % First clue -- Each wine bottle has poison on the left
  P1 #!= Wine,
  foreach(I in 2..N) (
     X[I] #= Wine #=> X[I-1] #= Poison )
  end,

  % Second clue -- the ends are different ...
  P1 #!= P7,

  % ... and neither end moves you forward
  P1 #!= Forward,
  P7 #!= Forward,

  % Third clue -- The largest and smallest are not poison
  Dwarf #!= Poison,
  Giant #!= Poison,

  % Fourth clue -- second left and second on the right are the same
  P2 #= P6,

  Vars = X ++ [Dwarf,Giant],
  solve(Vars),
  println([SS[T] : T in X]),
  nl.

