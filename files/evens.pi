/* 

  Evens puzzle in Picat.

  From Martin Chlond Integer Programming Puzzles:

  http://www.chlond.demon.co.uk/puzzles/puzzles1.html, puzzle nr. 4. 
  Description  : Evens puzzle
  Source       : Boris Kordemsky - The Moscow Puzzles (P8)
  """
  4. Take 16 coins and put them in four rows of four each. Remove 6 leaving an even 
  number of coins in each row and each column.
  
  (Kordemsky)
  """

  This model was inspired by the XPress Mosel model created by Martin Chlond.
  http://www.chlond.demon.co.uk/puzzles/sol1s4.html

  From Model example k4even_ka.mos
  """
  Placing a given number of chips on a 4x4 grid 
  such that every row and every column contains
  an even number of chips.
  """ 

  This Picat model was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/


% import util.
import cp.


main => go.


go =>
  NPos = 4,
  Pos = 1..NPos,
  NChip = 10,

  Place = new_array(NPos,NPos),
  Place :: 0..1,

  sum([Place[R,C] : R in Pos, C in Pos]) #= NChip,
  foreach(R in Pos)
     sum([Place[R,C] : C in Pos]) mod 2 #= 0
  end,
  foreach(C in Pos)
     sum([Place[R,C] : R in Pos]) mod 2 #= 0
  end,

  solve(Place),

  println("Place:"),
  foreach(Row in Place) writeln(Row.to_list()) end,
  nl.


% IP version 
% Inspired by http://www.chlond.demon.co.uk/puzzles/sol1s4.html
go2 =>
  Square = 4,
  Coin = 10,

  X = new_array(Square,Square),
  X :: 0..1,
  N = new_list(Square),
  N :: 0..10000,
  M = new_list(Square),
  M :: 0..10000,

  sum([X[I,J] : I in 1..Square, J in 1..Square]) #= Coin,
  foreach(I in 1..Square)
     sum([X[I,J] : J in 1..Square]) #= 2*N[I]
  end,
  foreach(J in 1..Square)
     sum([X[I,J] : I in 1..Square]) #= 2*M[J]
  end,


  solve(X.to_list() ++ N ++ M),

  writeln(n=N),
  writeln(m=M),
  foreach(Row in X) writeln(Row.to_list()) end,

  nl.



